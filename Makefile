PYTHON := $(shell command -v python3 2> /dev/null)
PLATFORM := $(shell uname)

LOCAL_BIN_DIR := $(HOME)/.local/bin

ALACRITTY_COMMON := alacritty/conf.d/common.yml alacritty/themes/powershell.yml
ALACRITTY_CONFIG := generated/alacritty.yml
ALACRITTY_TARGET := $(HOME)/.config/alacritty.yml

FISH_PHONY_CONFIG := generated/.fish_config
FISH_CONFIG := fish/config.fish
FISH_CHECK := $(shell fish/checks.sh)
FISH_DIR := $(HOME)/.config/fish
FISH_TARGET := $(FISH_DIR)/config.fish

I3_COMMON := i3/conf.d/common i3/conf.d/floating_exceptions i3/conf.d/applications \
             i3/conf.d/autostart i3/themes/default
I3_CONFIG := generated/i3.config
I3_DIR := $(HOME)/.config/i3
I3_TARGET := $(I3_DIR)/config

LVIM_CHECK := $(shell lunarvim/lvim_check.sh)
LVIM_GUI_CHECK := $(shell lunarvim/neovide_check.sh)

LVIM_PHONY_CONFIG := generated/.lvim_config
LVIM_CONFIG := lunarvim/config.lua
LVIM_CONFIG_TARGET := $(HOME)/.config/lvim/config.lua

LVIM_PHONY_GUI_BIN := generated/.lvim_gui_bin
LVIM_GUI_BIN := lunarvim/lvim-gui
LVIM_GUI_BIN_TARGET := $(LOCAL_BIN_DIR)/lvim-gui

PICOM_CHECK := $(shell picom/checks.sh)
PICOM_PHONY_CONFIG := generated/.picom_config
PICOM_CONFIG := picom/picom.conf
PICOM_TARGET := $(HOME)/.config/picom.conf

REDSHIFT_PHONY_CONFIG := generated/.redshift_config
REDSHIFT_CONFIG := redshift/redshift.conf
REDSHIFT_DIR := $(HOME)/.config/redshift
REDSHIFT_TARGET := $(REDSHIFT_DIR)/redshift.conf

TMUX_CHECK := $(shell tmux/checks.sh)
TMUX_PHONY_CONFIG := generated/.tmux_config
TMUX_CONFIG := tmux/tmux.conf
TMUX_TARGET := $(HOME)/.tmux.conf

POSTPROCESS_SCRIPT := scripts/postprocess.sh

all: $(ALACRITTY_CONFIG) $(FISH_PHONY_CONFIG) $(I3_CONFIG) $(LVIM_PHONY_CONFIG) $(LVIM_PHONY_GUI_BIN) $(PICOM_PHONY_CONFIG) $(REDSHIFT_PHONY_CONFIG)

clean:
	-@rm $(ALACRITTY_TARGET) $(FISH_TARGET) $(LVIM_CONFIG_TARGET) $(LVIM_GUI_BIN_TARGET) $(TMUX_TARGET)
	$(info Removed common linked targets)

ifeq (Linux, $(PLATFORM))
	-@rm $(I3_TARGET) $(PICOM_TARGET) $(REDSHIFT_TARGET)
	$(info Removed Linux-specific linked targets)
endif

	-@rm -rf generated/
	$(info Deleted generated configurations directory)

generated:
ifndef PYTHON
	$(error "No python3 binaries found in $(PATH); please install Python3 before continuing.")
endif
	@mkdir -p generated/
	$(info Created generated configurations directory)

$(ALACRITTY_CONFIG): generated
ifeq (Darwin, $(PLATFORM))
	@printf "# WARNING: autogenerated configuration file\n\n" > $(ALACRITTY_CONFIG) && \
		cat alacritty/platform/macos.yml $(ALACRITTY_COMMON) >> $(ALACRITTY_CONFIG)
else ifeq (Linux, $(PLATFORM))
	@printf "# WARNING: autogenerated configuration file\n\n" > $(ALACRITTY_CONFIG) && \
		cat alacritty/platform/linux.yml $(ALACRITTY_COMMON) >> $(ALACRITTY_CONFIG)
else
	$(error $(PLATFORM) is currently not supported, sorry.)
endif
	@sh $(POSTPROCESS_SCRIPT) "alacritty" "$(ALACRITTY_CONFIG)"
	$(info Generated alacritty configuration file at $(ALACRITTY_CONFIG))

$(FISH_PHONY_CONFIG): generated
ifneq (1,$(FISH_CHECK))
	$(error Fish environment check failed: cannot find fish binary.)
endif
	$(info Fish environment check successful.)
	@touch $(FISH_PHONY_CONFIG)
	$(info Fish configuration file at $(FISH_CONFIG))

$(I3_CONFIG): generated
ifeq (Linux, $(PLATFORM))
	@printf "# WARNING: autogenerated configuration file\n\n" > $(I3_CONFIG) && \
		cat $(I3_COMMON) >> $(I3_CONFIG)
	@sh $(POSTPROCESS_SCRIPT) "i3" "$(I3_CONFIG)"
	$(info Generated i3 configuration file at $(I3_CONFIG))
endif

$(LVIM_PHONY_CONFIG): generated
ifneq (1,${LVIM_CHECK})
	$(error LunarVim environment check failed: LunarVim not installed)
endif
	$(info LunarVim environment check successful.)
	@touch $(LVIM_PHONY_CONFIG)
	$(info LunarVim configuration file at $(LVIM_CONFIG))

$(LVIM_PHONY_GUI_BIN): generated
ifeq (1,${LVIM_GUI_CHECK})
	@touch $(LVIM_PHONY_GUI_BIN)
	$(info LunarVim neovide script at $(LVIM_GUI_BIN))
endif

$(PICOM_PHONY_CONFIG): generated
ifeq (1,$(PICOM_CHECK))
	@touch $(PICOM_PHONY_CONFIG)
	$(info Picom configuration file at $(FISH_CONFIG))
endif

$(REDSHIFT_PHONY_CONFIG): generated
ifeq (Linux, $(PLATFORM))
	@touch $(REDSHIFT_PHONY_CONFIG)
	$(info Redshift configuration file at $(REDSHIFT_CONFIG))
endif

$(TMUX_PHONY_CONFIG): generated
	@touch $(TMUX_PHONY_CONFIG)
	$(info tmux configuration file at $(TMUX_CONFIG))

$(ALACRITTY_TARGET): $(ALACRITTY_CONFIG) $(FISH_TARGET)
	@ln -s $(shell pwd)/$(ALACRITTY_CONFIG) $(ALACRITTY_TARGET)
	$(info Linking $(ALACRITTY_TARGET) to $(ALACRITTY_CONFIG))

$(FISH_TARGET): $(FISH_PHONY_CONFIG)
	@mkdir -p $(FISH_DIR)
	@ln -s $(shell pwd)/$(FISH_CONFIG) $(FISH_TARGET)
	$(info Linking $(FISH_TARGET) to $(FISH_CONFIG))

$(I3_TARGET): $(I3_CONFIG) $(PICOM_PHONY_CONFIG)
ifeq (Linux, $(PLATFORM))
	@mkdir -p $(I3_DIR)
	@ln -s $(shell pwd)/$(I3_CONFIG) $(I3_TARGET)
	$(info Linking $(I3_CONFIG) to $(I3_TARGET))
endif

$(LVIM_CONFIG_TARGET): $(LVIM_PHONY_CONFIG)
	@ln -s $(shell pwd)/$(LVIM_CONFIG) $(LVIM_CONFIG_TARGET)
	$(info Linking $(LVIM_CONFIG_TARGET) to $(LVIM_CONFIG))

$(LVIM_GUI_BIN_TARGET): $(LVIM_PHONY_GUI_BIN)
ifeq (1,${LVIM_GUI_CHECK})
	@mkdir -p $(LOCAL_BIN_DIR)
	@ln -s $(shell pwd)/$(LVIM_GUI_BIN) $(LVIM_GUI_BIN_TARGET)
	$(info Linking $(LVIM_GUI_BIN_TARGET) to $(LVIM_GUI_BIN))
endif

$(PICOM_TARGET): $(PICOM_PHONY_CONFIG)
ifeq (1,$(PICOM_CHECK))
	@ln -s $(shell pwd)/$(PICOM_CONFIG) $(PICOM_TARGET)
	$(info Linking $(PICOM_CONFIG) to $(PICOM_TARGET))
endif

$(REDSHIFT_TARGET): $(REDSHIFT_PHONY_CONFIG)
ifeq (Linux, $(PLATFORM))
	@./redshift/install.sh "$(shell pwd)/$(REDSHIFT_CONFIG)" "$(REDSHIFT_TARGET)" "$(REDSHIFT_DIR)"
endif

$(TMUX_TARGET): $(TMUX_PHONY_CONFIG)
ifeq (1,${TMUX_CHECK})
	@ln -s $(shell pwd)/$(TMUX_CONFIG) $(TMUX_TARGET)
	$(info Linking $(TMUX_CONFIG) to $(TMUX_TARGET))
endif

install: $(ALACRITTY_TARGET) $(FISH_TARGET) $(I3_TARGET) $(LVIM_CONFIG_TARGET) $(LVIM_GUI_BIN_TARGET) $(PICOM_TARGET) $(REDSHIFT_TARGET) $(TMUX_TARGET)
